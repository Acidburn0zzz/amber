#!/usr/bin/env ruby

if ARGV.include?('--debug')
  if RUBY_VERSION =~ /^2/
    require 'byebug'
  else
    require 'debugger'
  end
end

begin
  require 'amber'
rescue LoadError
  base_dir = File.expand_path('..', File.dirname(File.symlink?(__FILE__) ? File.readlink(__FILE__) : __FILE__))
  ["#{base_dir}/lib"].each do |path|
    $LOAD_PATH.unshift(path) unless $LOAD_PATH.include?(path)
  end
  require 'amber'
end

def process_command_line_arguments
  @command = nil
  @command_arg = nil
  @verbose = false
  loop do
    case ARGV[0]
      when 'init'        then @command = ARGV.shift; @command_arg = ARGV.shift
      when 'build'       then @command = ARGV.shift
      when 'rebuild'     then @command = ARGV.shift
      when 'clean'       then @command = 'clear'; ARGV.shift
      when 'clear'       then @command = ARGV.shift
      when 'server'      then @command = ARGV.shift; @command_arg = ARGV.shift
      when 'apache'      then @command = ARGV.shift; @command_arg = ARGV.shift
      when 'version'     then version
      when '--version'   then version
      when '--debug'     then ARGV.shift
      when '--help'      then usage
      when 'help'        then usage
      when '-h'          then usage
      when '-v'          then @verbose = true; ARGV.shift
      when /^-/          then usage("Unknown option: #{ARGV[0].inspect}")
      else break
    end
  end
  usage("No command given") unless @command
end

def usage(msg=nil)
  $stderr.puts(msg) if msg
  $stderr.puts
  $stderr.puts("Usage: #{File.basename($0)} [OPTIONS] COMMAND")
  $stderr.puts
  $stderr.puts("COMMAND may be one or more of:
  init DIRECTORY         -- Create a new amber site in DIRECTORY.
  build                  -- Render static html pages.
  rebuild                -- Runs `clear` then `build`.
  server [[HOST][:PORT]] -- Runs mini web server bound to HOST:PORT (defaults to #{Amber::DEFAULT_HOST}:#{Amber::DEFAULT_PORT}).
  clear                  -- Erase static HTML pages.
  clean                  -- Alias for `clear`.
  apache DIRECTORY       -- Prints out appropriate apache2 config for the given DIRECTORY.
  help                   -- This message.
  version                -- Print version and exit.")
  $stderr.puts
  $stderr.puts("OPTIONS may be one or more of:
  -v                     -- Run in verbose mode.
  --version              -- Print version and exit.
  --debug                -- Enable debugger.")
  exit(2)
end

def version
  puts Amber::VERSION
  exit
end

def main
  process_command_line_arguments
  if @verbose
    Amber.logger.level = Logger::DEBUG
  end
  Amber::CLI.new(Dir.pwd).send(@command, {:port => @port, :verbose => @verbose, :arg => @command_arg})
end

main